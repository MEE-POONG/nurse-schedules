generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model Duty {
  id         String    @id @default(auto()) @map("_id") @db.ObjectId
  Shif       Shif?     @relation(fields: [shifId], references: [id])
  User       User?     @relation(fields: [userId], references: [id])
  Location   Location? @relation(fields: [locationId], references: [id])
  locationId String?   @db.ObjectId
  shifId     String?   @db.ObjectId
  userId     String    @db.ObjectId
  datetime   DateTime  @default(now())
  isOT       Boolean?
}

model OnCallDuty {
  id         String    @id @default(auto()) @map("_id") @db.ObjectId
  Shif       Shif?     @relation(fields: [shifId], references: [id])
  User       User?     @relation(fields: [userId], references: [id])
  Location   Location? @relation(fields: [locationId], references: [id])
  locationId String?   @db.ObjectId
  shifId     String?   @db.ObjectId
  userId     String    @db.ObjectId
  datetime   DateTime  @default(now())
  isOT       Boolean?
}

model UserDuty {
  id           String    @id @default(auto()) @map("_id") @db.ObjectId
  datetime     DateTime  @default(now())
  User         User?     @relation(fields: [userId], references: [id])
  Location     Location? @relation(fields: [locationId], references: [id])
  userId       String    @db.ObjectId
  locationId   String?   @db.ObjectId
  isTrain      Boolean?  @default(false)
  TrainingName String?   @default("")
}

model Location {
  id              String            @id @default(auto()) @map("_id") @db.ObjectId
  name            String            @unique
  User            User[]
  Duty            Duty[]
  UserDuty        UserDuty[]
  OnCallDuty      OnCallDuty[]
  ShiftPreference ShiftPreference[]
  ShiftHistory    ShiftHistory[]
}

model Position {
  id   String @id @default(auto()) @map("_id") @db.ObjectId
  name String @unique
  User User[]
}

model Shif {
  id              String            @id @default(auto()) @map("_id") @db.ObjectId
  name            String
  Duty            Duty[]
  code            Int?
  class           String?
  isOT            Boolean?
  isShif          Boolean?
  isDayOff        Boolean?
  OnCallDuty      OnCallDuty[]
  ShiftPreference ShiftPreference[]
  ShiftHistory    ShiftHistory[]
}

model User {
  id                    String            @id @default(auto()) @map("_id") @db.ObjectId
  firstname             String?
  lastname              String?
  username              String?
  password              String?
  normal_compensation   Int?              @default(360)
  overtime_compensation Int?              @default(720)
  isPartTime            Boolean?          @default(false)
  isAdmin               Boolean?          @default(true)
  isActive              Boolean           @default(true)
  isChief               Boolean?          @default(false)
  isPregnant            Boolean?          @default(false)
  isElderly             Boolean?          @default(false)
  SequenceNo            Int?
  Duty                  Duty[]
  Location              Location?         @relation(fields: [locationId], references: [id])
  Position              Position?         @relation(fields: [positionId], references: [id])
  Title                 Title?            @relation(fields: [titleId], references: [id])
  locationId            String?           @db.ObjectId
  positionId            String            @db.ObjectId
  titleId               String            @db.ObjectId
  UserDuty              UserDuty[]
  OnCallDuty            OnCallDuty[]
  ShiftPreference       ShiftPreference[]
  ShiftHistory          ShiftHistory[]
}

model Title {
  id   String @id @default(auto()) @map("_id") @db.ObjectId
  name String @unique
  User User[]
}

model Configuration {
  id           String  @id @default(auto()) @map("_id") @db.ObjectId
  departmentor String?
  leader       String?
  director     String?
}

model ShiftPreference {
  id         String    @id @default(auto()) @map("_id") @db.ObjectId
  User       User      @relation(fields: [userId], references: [id])
  Shif       Shif      @relation(fields: [shifId], references: [id])
  Location   Location? @relation(fields: [locationId], references: [id])
  userId     String    @db.ObjectId
  shifId     String    @db.ObjectId
  locationId String?   @db.ObjectId
  datetime   DateTime
  priority   Int       @default(1) // 1=สูงสุด, 2=ปกติ, 3=ไม่อยาก
  isReserved Boolean   @default(false)
  createdAt  DateTime  @default(now())
  updatedAt  DateTime  @updatedAt

  @@unique([userId, shifId, datetime])
}

model ShiftHistory {
  id         String    @id @default(auto()) @map("_id") @db.ObjectId
  User       User      @relation(fields: [userId], references: [id])
  Shif       Shif      @relation(fields: [shifId], references: [id])
  Location   Location? @relation(fields: [locationId], references: [id])
  userId     String    @db.ObjectId
  shifId     String    @db.ObjectId
  locationId String?   @db.ObjectId
  datetime   DateTime
  isOT       Boolean   @default(false)
  createdAt  DateTime  @default(now())
}
