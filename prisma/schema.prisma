generator client {
  provider = "prisma-client-js"
  previewFeatures = ["orderByRelation"]
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model Duty {
  id         String @id @default(auto()) @map("_id") @db.ObjectId
  Shif     Shif?     @relation(fields: [shifId], references: [id])
  User     User?     @relation(fields: [userId], references: [id])
  Location Location? @relation(fields: [locationId], references: [id])
  locationId String? @db.ObjectId
  shifId   String?    @db.ObjectId
  userId   String    @db.ObjectId
  datetime DateTime  @default(now())
  isOT     Boolean?
}

model Location {
  id   String @id @default(auto()) @map("_id") @db.ObjectId
  name String @unique
  User User[]
  Duty Duty[]
}

model Position {
  id   String @id @default(auto()) @map("_id") @db.ObjectId
  name String @unique
  User User[]
}

model Shif {
  id       String   @id @default(auto()) @map("_id") @db.ObjectId
  name     String   @unique
  Duty     Duty[]
  code     Int?
  isShif   Boolean?
  isDayOff Boolean?
}

model User {
  id         String    @id @default(auto()) @map("_id") @db.ObjectId
  firstname  String?
  lastname   String?
  Duty       Duty[]
  Location   Location? @relation(fields: [locationId], references: [id])
  Position   Position? @relation(fields: [positionId], references: [id])
  Title      Title?    @relation(fields: [titleId], references: [id])
  locationId String    @db.ObjectId
  positionId String    @db.ObjectId
  titleId    String    @db.ObjectId
}

model Title {
  id   String @id @default(auto()) @map("_id") @db.ObjectId
  name String @unique
  User User[]
}
