generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model Duty {
  id         String    @id @default(auto()) @map("_id") @db.ObjectId
  Shif       Shif?     @relation(fields: [shifId], references: [id])
  User       User?     @relation(fields: [userId], references: [id])
  Location   Location? @relation(fields: [locationId], references: [id])
  locationId String?   @db.ObjectId
  shifId     String?   @db.ObjectId
  userId     String    @db.ObjectId
  datetime   DateTime  @default(now())
  isOT       Boolean?
}

model OnCallDuty {
  id         String    @id @default(auto()) @map("_id") @db.ObjectId
  Shif       Shif?     @relation(fields: [shifId], references: [id])
  User       User?     @relation(fields: [userId], references: [id])
  Location   Location? @relation(fields: [locationId], references: [id])
  locationId String?   @db.ObjectId
  shifId     String?   @db.ObjectId
  userId     String    @db.ObjectId
  datetime   DateTime  @default(now())
  isOT       Boolean?
}

model UserDuty {
  id         String    @id @default(auto()) @map("_id") @db.ObjectId
  datetime   DateTime  @default(now())
  User       User?     @relation(fields: [userId], references: [id])
  Location   Location? @relation(fields: [locationId], references: [id])
  userId     String    @db.ObjectId
  locationId String?   @db.ObjectId
}

model Location {
  id         String       @id @default(auto()) @map("_id") @db.ObjectId
  name       String       @unique
  User       User[]
  Duty       Duty[]
  UserDuty   UserDuty[]
  OnCallDuty OnCallDuty[]
}

model Position {
  id   String @id @default(auto()) @map("_id") @db.ObjectId
  name String @unique
  User User[]
}

model Shif {
  id         String       @id @default(auto()) @map("_id") @db.ObjectId
  name       String
  Duty       Duty[]
  code       Int?
  class      String?
  isOT       Boolean?
  isShif     Boolean?
  isDayOff   Boolean?
  OnCallDuty OnCallDuty[]
}

model User {
  id                    String       @id @default(auto()) @map("_id") @db.ObjectId
  firstname             String?
  lastname              String?
  username              String?
  password              String?
  normal_compensation   Int?
  overtime_compensation Int?
  isPartTime            Boolean?
  isAdmin               Boolean?
  isActive              Boolean      @default(true)
  Duty                  Duty[]
  Location              Location?    @relation(fields: [locationId], references: [id])
  Position              Position?    @relation(fields: [positionId], references: [id])
  Title                 Title?       @relation(fields: [titleId], references: [id])
  locationId            String?      @db.ObjectId
  positionId            String       @db.ObjectId
  titleId               String       @db.ObjectId
  UserDuty              UserDuty[]
  OnCallDuty            OnCallDuty[]
}

model Title {
  id   String @id @default(auto()) @map("_id") @db.ObjectId
  name String @unique
  User User[]
}
